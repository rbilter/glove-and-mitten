# Glove and Mitten Project - AI Assistant Instructions

## Project Overview
This is a creative multimedia project for a YouTube comic series featuring characters Glove and Mitten from "The Accessories". The project combines PowerPoint episode creation, automated metadata generation, and comprehensive development tracking.

## Core Workflow Commands
When the user requests these actions, follow the exact documented workflows:

### commit-local
**Trigger**: "commit-local", "run commit-local", "sync local changes"
**Action**: Execute the commit-local workflow exactly as documented in `dev/workflows/commit-local.md`
**Critical Rules**:
- ALWAYS use multiple `-m` flags for git commits, NEVER multi-line strings
- Follow the exact 11-step process: git status → add → commit → log → push → status → rclone sync → rclone check
- Example: `git commit -m "title" -m "detail 1" -m "detail 2"`

### process-episode
**Trigger**: "process-episode", "Process episode: [path]"
**Action**: Execute the process-episode workflow from `dev/workflows/process-episode.md`
**Steps**: Generate PDF → Extract content → Create metadata → Generate YouTube description

### text-to-speech
**Trigger**: "read-profile", "Read [character] profile", "Use TTS for [character]"
**Action**: Execute the text-to-speech workflow from `dev/workflows/text-to-speech.md`
**Steps**: Clean markdown → Call Google Cloud TTS → Play/save audio → Cache results

### utility-commands
**Trigger**: "help", "status", "clean", "list characters", "list voices"
**Action**: Provide project information and utilities
**Commands**:
- "help" - Show available workflow commands and project overview
- "status" - Show git status, recent commits, and project file counts
- "clean" - Clean generated files (PDFs, cache, temporary files)
- "list characters" - Show available character profiles for TTS
- "list voices" - Show available Google Cloud TTS voices

## Project Structure Rules

### File Organization
- **Character files**: Saga-specific in `characters/sagas/[saga-name]/` or main characters in `characters/main/`
- **Episode assets**: Keep audio/video with episodes, only reusable elements in `assets/`
- **Production workflow**: Metadata in git, large files (videos) Google Drive only

### Naming Conventions
- Episode files: `##-[story]-[episode].pptx` (e.g., `01-lights-tuff-daze-episode.pptx`)
- Monthly directories: `YYYY-MM/` format (e.g., `2025-07/`, `2025-08/`)

### Git and Sync Rules
- **File filtering**: Handled by `.gitignore` and `.rclone-filter` files
- **Git and sync operations**: Use the commit-local workflow process

## Content Guidelines

### Character Consistency
- **Glove**: Practical, organized, sometimes bossy but caring
- **Mitten**: Warm-hearted, creative, optimistic problem-solver
- **Supporting characters**: Saga-specific (e.g., Principal Watch only in School-Daze)
- Keep content **family-friendly and PG**
- Allow **realistic conflicts** between characters while maintaining positive themes

### Episode Format
- **3-5 panel comic style** for YouTube
- **60-120 second duration** optimal
- **4-scene structure** (based on existing audio files)
- **Educational or character-building themes**

## Automation Systems

### Episode Processing
- **PowerPoint → PDF**: Automated conversion via LibreOffice
- **Content extraction**: pdftotext for dialogue and content
- **Metadata generation**: YouTube description, tags, upload checklist

## Development Environment

### Required Tools
- **rclone**: Google Drive sync (configured with "gdrive" remote)
- **LibreOffice**: PowerPoint to PDF conversion
- **pdftotext**: Text extraction from PDFs
- **Python 3**: For chat parsing and TTS scripts
- **Google Cloud TTS**: Text-to-speech for character profiles
- **Git**: Version control with GitHub remote

### VS Code Integration
- **Chat sessions**: Automatically parsed and included in daily summaries
- **Workspace**: Uses specific workspace ID for chat session location
- **Monthly organization**: Sessions organized by YYYY-MM directory structure

## Important Behavioral Rules

1. **Follow existing workflows exactly** - Don't create ad-hoc processes
2. **Use documented file locations** - Respect the established structure
3. **Preserve user's naming conventions** - Don't change established patterns
4. **Check existing files** before creating new ones
5. **Use the hybrid production approach** - Source files in git, large outputs Google Drive only
6. **Always verify operations** - Use status checks after git and sync operations

### Workflow Documentation
- `dev/workflows/commit-local.md` - Git and Google Drive sync process
- `dev/workflows/process-episode.md` - Episode metadata generation
- `dev/workflows/text-to-speech.md` - Character profile TTS reading
- All workflows should be consulted before executing commands

This project emphasizes **automation**, **organization**, and **consistency**. When in doubt, check existing documentation and follow established patterns rather than improvising new approaches.
